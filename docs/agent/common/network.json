{
  "Networking.java": {
    "desc": "ネットワーク通信の管理クラス。アニメーション同期、キー入力同期、HUD状態同期、リコイル同期を統合管理",
    "importance": "high",
    "last_accessed": "2025-06-15",
    "key_features": [
      "Architecturyネットワーク使用",
      "クライアント・サーバー分離",
      "EnvType判定",
      "C2S/S2C通信登録メソッド",
      "KeyInputPacket.receiveC2S登録",
      "HudStatePacket.receiveS2C登録",
      "AimPacket.receiveC2S登録",
      "RecoilPacket.receiveS2C登録"
    ],
    "dependencies": ["ItemAnimationEventPacket.java", "KeyInputPacket.java", "HudStatePacket.java", "AimPacket.java", "RecoilPacket.java"],
    "note": "アニメーション同期に加えてキー入力同期、HUD状態同期、エイム状態同期、リコイル処理を実装。マルチプレイヤーでの銃操作、HUD表示、エイム機能、リコイル体験を完全対応"
  },
  "KeyInputPacket.java": {
    "desc": "クライアントからサーバーへのキー入力状態同期パケット。リアルタイムな銃操作のマルチプレイヤー対応を実現",
    "importance": "high",
    "last_accessed": "2025-06-11",
    "key_features": [
      "C2S（Client to Server）通信専用",
      "Map<KeyInputManager.Key, Boolean>でのキー状態送信",
      "createC2SPacket()でのパケット作成",
      "receiveC2S()でのサーバー側受信処理",
      "HasKeyInputManagerとの連携",
      "メインスレッドでの安全な処理",
      "VarInt効率的エンコーディング"
    ],
    "dependencies": ["KeyInputManager.java", "HasKeyInputManager.java", "ClientKeyInputManager.java"],
    "note": "58行の実装。専用キーバインドシステムを支えるネットワーク通信の中核。従来のuse()メソッドを完全に置き換え"
  },
  "ItemAnimationEventPacket.java": {
    "desc": "アイテムのアニメーションイベントをサーバーからクライアントに同期するパケットクラス",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "S2C（Server to Client）通信専用",
      "UUIDベースのアイテム識別",
      "アニメーションIDと時間情報の送信",
      "Architectury NetworkManager使用",
      "ワールド内全プレイヤーへのブロードキャスト",
      "ItemAnimationManagerとの連携"
    ],
    "dependencies": ["ItemAnimationManager.java"],
    "note": "レバーアクションのアニメーションをマルチプレイヤーで同期するために不可欠"
  },
  "HudStatePacket.java": {
    "desc": "HUD状態情報をサーバーからクライアントにリアルタイム同期するパケットシステム",
    "importance": "high",
    "last_accessed": "2025-06-13",
    "key_features": [
      "S2C（Server to Client）通信専用",
      "String状態IDとNbtCompoundデータの送信",
      "sendS2C()メソッドでの個別プレイヤー対象送信",
      "receiveS2C()でのClientHudManager連携",
      "createS2CPacket()でのパケット作成",
      "PacketByteBufでの効率的なデータエンコーディング",
      "Architectury NetworkManager使用",
      "メインスレッドでの安全な処理"
    ],
    "dependencies": ["ClientHudManager.java", "ServerHudManager.java", "LeverActionHudState.java"],
    "note": "約30行の実装。弾薬状況や銃のHUD情報を効率的にクライアントに送信。NBT形式で柔軟なデータ構造を実現"
  },
  "AimPacket.java": {
    "desc": "エイム状態をクライアントからサーバーに同期するパケット。リアルタイムエイムシステムを実現",
    "importance": "high",
    "last_accessed": "2025-06-14",
    "key_features": [
      "C2S（Client to Server）通信専用",
      "boolean型でのエイム状態送信",
      "sendC2S()メソッドでのクライアント送信",
      "createC2SPacket()でのパケット作成",
      "receiveC2S()でのサーバー側受信処理",
      "HasAimManagerとの連携",
      "メインスレッドでの安全な処理",
      "NetworkManager使用の効率的通信"
    ],
    "dependencies": ["HasAimManager.java", "ClientAimManager.java"],
    "note": "約31行の実装。エイム機能のマルチプレイヤー対応を実現するネットワーク通信の中核"
  },
  "RecoilPacket.java": {
    "desc": "リコイル効果をサーバーからクライアントに送信するパケット。射撃時の視点反動を実現",
    "importance": "medium",
    "last_accessed": "2025-06-15",
    "key_features": [
      "S2C（Server to Client）通信専用",
      "sendS2C()メソッドでの個別プレイヤー送信",
      "createS2CPacket()でのパケット作成",
      "receiveS2C()でのクライアント側受信処理",
      "プレイヤーピッチの-5度調整でリコイル再現",
      "メインスレッドでの安全な処理",
      "NetworkManager使用の効率的通信"
    ],
    "dependencies": ["LeverActionGunItem.java", "GunController.java"],
    "note": "約29行の実装。銃の射撃時のリコイル体験をマルチプレイヤーで実現するネットワーク通信"
  }
}