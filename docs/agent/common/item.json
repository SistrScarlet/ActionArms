{
  "GunItem.java": {
    "desc": "全ての銃アイテムの基底クラス、glTFモデル描画対応",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": ["Minecraftアイテム継承", "GLTFModelItemインターフェース実装", "銃の基本構造"],
    "dependencies": ["GLTFModelItem", "MixinItemRenderer"],
    "note": "glTF描画システムとの連携により、カスタム3Dモデル描画が可能"
  },
  "LeverActionGunItem.java": {
    "desc": "レバーアクション機構を持つ銃アイテム。サウンド再生と実際の弾薬管理システムを実装",
    "importance": "high",
    "last_accessed": "2025-06-10",
    "key_features": [
      "GunItem継承",
      "レバーアクション機構",
      "弾丸エンティティ生成処理",
      "サウンド再生システム（LeverActionPlaySoundContext）",
      "実際の弾薬管理（InventoryAmmoUtil）",
      "クリエイティブモードでの無限弾薬",
      "コンテキストパターンで処理分離",
      "アニメーション同期"
    ],
    "parent": "GunItem",
    "dependencies": [
      "BulletEntity.java",
      "Registration.java",
      "InventoryAmmoUtil.java",
      "LeverActionPlaySoundContext.java",
      "LeverActionGunComponent.java"
    ],
    "note": "約170行に大幅拡張。サウンドと弾薬管理を統合した完全なレバーアクション銃システム"
  },
  "util/GlftModelItem.java": {
    "desc": "glTFモデルを使用するアイテム用のマーカーインターフェース",
    "importance": "medium",
    "last_accessed": "2025-06-08",
    "key_features": ["MixinItemRendererでの描画判定", "将来的にモデル指定機能拡張予定"],
    "dependencies": ["MixinItemRenderer", "MixinHeldItemRenderer"],
    "note": "現在は空インターフェース、アイテム別モデル指定機能を今後追加予定（GLTFModelItemからGlftModelItemにリネーム）"
  },
  "component/IItemComponent.java": {
    "desc": "アイテムコンポーネントシステムのインターフェース",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "NBT読み書きメソッド",
      "静的executeメソッド（ComponentResult返り値）",
      "静的queryメソッド（読み取り専用）",
      "静的updateメソッド（常に保存）",
      "ComponentResult enum（NO_CHANGE/MODIFIED）",
      "ExecuteFunction関数型インターフェース",
      "コンポーネント操作の共通パターン"
    ],
    "note": "銃の状態管理の核。ComponentResultでシンプルかつ明確な制御が可能"
  },
  "component/LeverActionGunComponent.java": {
    "desc": "レバーアクション銃の統合コンポーネント。サウンド再生機能と実際の弾薬管理を統合",
    "importance": "high",
    "last_accessed": "2025-06-10",
    "key_features": [
      "IItemComponent実装",
      "FireTrigger/CyclingLever/Reloadable直接実装",
      "レバー状態管理（leverDown、cycling、hammerReady）",
      "タイミング制御（各種coolTimeとcancelableTime）",
      "Chamber/Magazine統合管理",
      "tick処理による状態更新",
      "NBT永続化処理",
      "サウンド再生統合（LeverActionPlaySoundContext）",
      "実際の弾薬管理（ReloadStartContext）",
      "空撃ち音再生対応",
      "クリエイティブモードでの無限弾薬対応"
    ],
    "parent": "IItemComponent",
    "interfaces": ["FireTrigger", "CyclingLever", "Reloadable"],
    "dependencies": [
      "LeverActionGunDataType.java",
      "MagazineComponent.java",
      "Chamber.java",
      "LeverActionPlaySoundContext.java",
      "InventoryAmmoUtil.java"
    ],
    "note": "約220行に拡張。サウンド再生と実際の弾薬管理を統合した完全なレバーアクション銃システム"
  },
  "component/UniqueComponent.java": {
    "desc": "アイテム個体を一意に識別するUUIDを管理するコンポーネント。アニメーション同期に不可欠",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "IItemComponent実装",
      "UUIDの自動生成と管理",
      "get()静的メソッドで簡単アクセス",
      "アイテム個体識別システムの基盤"
    ],
    "parent": "IItemComponent",
    "dependencies": ["ItemUniqueManager.java"],
    "note": "アニメーション同期やマルチプレイヤー対応に不可欠"
  },
  "ItemUniqueManager.java": {
    "desc": "アイテムのUUID管理を一元化するユーティリティクラス。UniqueComponentと連携して動作",
    "importance": "medium",
    "last_accessed": "2025-06-08",
    "key_features": [
      "getOrCreate()メソッドでUUID取得・生成",
      "NBTキーの統一管理",
      "UniqueComponentからの呼び出し専用"
    ],
    "dependencies": ["UniqueComponent.java"],
    "note": "UUID管理の実装詳細を隠蔽し、シンプルなAPIを提供"
  },
  "component/AnimationContext.java": {
    "desc": "アニメーション処理のコンテキストインターフェース",
    "importance": "medium",
    "last_accessed": "2025-06-08",
    "key_features": ["アニメーション処理の共通インターフェース", "将来的な拡張予定"],
    "note": "現在は空インターフェース、今後アニメーション処理の標準化に使用予定"
  },
  "component/BulletComponent.java": {
    "desc": "弾丸コンポーネントの新実装。BaseItemComponentを継承しDataType分離設計を採用。エンティティシステム連携対応",
    "importance": "high",
    "last_accessed": "2025-06-10",
    "key_features": [
      "BaseItemComponent継承",
      "BulletDataType分離設計",
      "NBT読み書き実装",
      "型安全なコンポーネント管理",
      "getBulletDataType()メソッド提供",
      "BulletEntityとの連携"
    ],
    "parent": "BaseItemComponent",
    "dependencies": ["BulletDataType.java", "GunComponentTypes.java", "BulletEntity.java"],
    "note": "旧Bullet.javaから大幅リファクタリング、DataTypeとComponentの明確分離。エンティティへのデータ提供対応"
  },
  "component/BulletDataType.java": {
    "desc": "弾丸の基本データ定義。ダメージとヘッドショットダメージを管理",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "damage/headshotDamageパラメータ",
      "record型による不変データ",
      "レジストリ管理対応"
    ],
    "dependencies": ["GunDataTypes.java"],
    "note": "旧BulletType.javaを置き換え、よりシンプルで明確な設計"
  },
  "component/MagazineComponent.java": {
    "desc": "マガジンコンポーネント（旧Magazine.java）。BaseItemComponentを継承しDataType分離設計を採用",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "BaseItemComponent継承",
      "MagazineDataType分離設計",
      "LinkedList<Bullet>による弾丸管理",
      "チューブマガジン（FILO）対応",
      "弾丸互換性チェック",
      "NBT永続化"
    ],
    "parent": "BaseItemComponent",
    "dependencies": ["MagazineDataType.java", "BulletComponent.java", "GunComponentTypes.java"],
    "note": "旧Magazine.javaから名称変更とDataType分離リファクタリング"
  },
  "component/MagazineDataType.java": {
    "desc": "マガジンの基本データ定義。容量と弾丸互換性を管理",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "capacity（弾丸容量）",
      "allowBullet（弾丸互換性判定）",
      "record型による不変データ",
      "Predicate<Bullet>による柔軟な互換性管理"
    ],
    "dependencies": ["BulletComponent.java", "GunDataTypes.java"],
    "note": "旧MagazineType.javaを置き換え、よりシンプルで明確な設計"
  },
  "component/LeverActionGunDataType.java": {
    "desc": "レバーアクション銃の基本データ定義（旧LeverActionGunType.java）",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "各種アクションのクールタイム定義",
      "fireCoolLength/reloadLength設定",
      "leverDownLength/leverUpLength設定",
      "record型による不変データ",
      "name削除でよりシンプルに"
    ],
    "dependencies": ["GunDataTypes.java"],
    "note": "LeverActionGunType.javaからリネーム、name削除でシンプル化"
  },
  "component/registry/GunComponentTypes.java": {
    "desc": "銃コンポーネントの型定義レジストリ。具体的なコンポーネントインスタンスを定義",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "MIDDLE_CALIBER（弾丸コンポーネント）",
      "LEVER_ACTION_TUBE_MAGAZINE（マガジンコンポーネント）",
      "M1873（レバーアクション銃コンポーネント）",
      "ComponentTypeRegistries連携",
      "ファクトリーパターン実装"
    ],
    "dependencies": ["GunDataTypes.java", "ComponentTypeRegistries.java"],
    "note": "新設されたレジストリシステム、コンポーネントの型安全な管理を実現"
  },
  "component/registry/GunDataTypes.java": {
    "desc": "銃データタイプのレジストリ。具体的なデータ定義と登録を管理",
    "importance": "high",
    "last_accessed": "2025-06-08",
    "key_features": [
      "MIDDLE_CALIBER（弾丸データ）",
      "LEVER_ACTION_TUBE_MAGAZINE（マガジンデータ）",
      "M1873（レバーアクション銃データ）",
      "DataTypeRegistries連携",
      "型別register()メソッド"
    ],
    "dependencies": ["DataTypeRegistries.java", "各DataType.java"],
    "note": "新設されたレジストリシステム、データの一元管理を実現"
  },
  "BulletItem.java": {
    "desc": "弾丸アイテムクラス。BulletComponentとの連携でコンポーネントベース弾薬システムを実現",
    "importance": "high",
    "last_accessed": "2025-06-10",
    "key_features": [
      "Item継承",
      "Supplier<BulletComponent> componentSupplier",
      "getComponentSupplier()メソッド",
      "InventoryAmmoUtilとの連携",
      "コンポーネントベース弾薬管理"
    ],
    "parent": "Item",
    "dependencies": ["BulletComponent.java", "InventoryAmmoUtil.java"],
    "note": "20行のシンプルな実装。コンポーネントサプライヤーパターンでBulletComponentとの疎結合を実現"
  },
  "component/LeverActionPlaySoundContext.java": {
    "desc": "レバーアクション銃のサウンド再生コンテキスト。サウンドイベントと再生処理を管理",
    "importance": "medium",
    "last_accessed": "2025-06-10",
    "key_features": [
      "playSound()インターフェースメソッド",
      "Sound enum（CYCLE/RELOAD/FIRE/DRY_FIRE）",
      "各サウンドのボリューム・ピッチ設定",
      "Registration.javaのサウンドイベント連携",
      "playSound()デフォルト実装",
      "SoundCategoryによる音量制御"
    ],
    "dependencies": ["Registration.java"],
    "note": "49行の実装。銃のサウンド再生を一元管理し、各コンポーネントから統一的に使用可能"
  }
}