{
  "description": "ActionArms MOD - 銃の機構と操作の心地よさを重視したMinecraft用銃MOD（副作用ゼロレンダリングシステム完全実装済み）",
  "last_updated": "2025-06-19",
  "structure": {
    "common/": {
      "description": "プラットフォーム共通コード",
      "detail_files": {
        "root.json": "メインクラス・設定管理",
        "client.json": "クライアント処理・キーバインド",
        "config.json": "MOD設定",
        "item.json": "銃アイテム・コンポーネント",
        "network.json": "ネットワーク通信",
        "setup.json": "登録処理",
        "gltf.json": "glTFモデル描画システム（副作用ゼロ設計完全対応）",
        "component.json": "移行完了ファイル（全クラスがitem/componentに統合済み）",
        "entity.json": "エンティティシステム（弾丸エンティティ）"
      }
    },
    "fabric/": {
      "description": "Fabric依存コード（未実装）"
    },
    "forge/": {
      "description": "Forge依存コード（未実装）"
    }
  },
  "key_features": [
    "コンポーネントベースの銃システム",
    "AccessorDataシステムの完全統合とメモリ効率大幅改善",
    "中間オブジェクト完全削除の直接描画システム（最大効率化完了！）",
    "イミュータブルなRenderingContext設計",
    "純粋関数型アニメーション計算（AnimationProcessor）",
    "統合された状態管理システム",
    "パッケージ構造の完全整理（converter/data/processor/renderer/util）",
    "レバーアクション機構の完全実装",
    "コンポーネントベースの銃の機構システム",
    "アニメーション同期システム",
    "カスタマイズ可能なキーバインド",
    "リアルタイムアニメーション対応",
    "スレッドセーフなレンダリング",
    "高いテスタビリティ（純粋関数設計）",
    "Mixinベースのカスタムアイテム描画",
    "メモリ効率と保守性の両立",
    "物理演算付き弾丸エンティティシステム",
    "ヘッドショット判定とダメージ処理",
    "レイキャスト＋ProjectileUtilハイブリッド当たり判定",
    "統合サウンドシステム（サイクル・リロード・射撃・空撃ち）",
    "リアルな弾薬管理システム（インベントリ連携）",
    "コンポーネントベース弾薬アイテムシステム",
    "クリエイティブモードでの無限弾薬対応",
    "キー入力システムとGunControllerの完全実装",
    "専用キーバインド操作システム（右クリック廃止）",
    "クライアント・サーバー間キー入力同期",
    "プレイヤーエンティティへのMixin機能注入",
    "インベントリ全体の銃アイテム自動処理",
    "マルチプレイヤー対応のリアルタイム銃操作",
    "HUD描画システムの完全実装",
    "薬室・マガジン状況の視覚的表示機能",
    "リアルタイムHUD状態同期システム",
    "効率的なネットワーク通信による弾薬状況表示",
    "エイム機能の完全実装（トグル・プッシュ両対応）",
    "リアルタイムエイム同期システム",
    "エイム時のアニメーションと描画位置調整",
    "マルチプレイヤー対応のリアルタイムエイムシステム"
  ],
  "recent_major_changes": {
    "2025-06-19-entity-record": {
      "title": "エンティティ記録システム・レンダリング・データタイプ・ファイル名統一を実装",
      "changes": [
        "🎯 エンティティ記録システム実装 - EntityRecordManager.java新実装",
        "HasEntityRecordManager.java - エンティティ記録機能のインターフェース設計",
        "MixinPlayerEntityRenderer.java - プレイヤーレンダリング処理への拡張対応",
        "MixinServerWorld.java - サーバーワールドのエンティティ処理拡張",
        "ServerWorldInvoker.java - ワールド内部メソッドアクセス用Mixin Invoker",
        "🔧 レンダリングシステム最適化 - GltfRenderLayer/GltfRenderer/RenderingContextの改善",
        "HudState/AAHudRenderer - HUD描画システムの更なる最適化と構造改善",
        "BulletEntityRenderer.java - 弾丸エンティティレンダリングの最適化",
        "🔤 ファイル名統一 - middle_caliber_bullet → medium_caliber_bulletに完全統一",
        "テクスチャファイル名統一 - middle_caliber_bullet.png → medium_caliber_bullet.png",
        "レシピ・advancement・言語ファイルの統一対応",
        "⚔️ プロジェクタイルダメージタイプ設定 - is_projectile.jsonタグ追加",
        "minecraft/tags/damage_type/is_projectile.json - 弾丸ダメージをプロジェクタイルとして認識",
        "🏗️ 依存関係軽量化 - compileOnlyへの変更でビルド時間短縮",
        "build.gradle - 依存関係設定の最適化",
        "Mixin設定拡張 - actionarms-common.mixins.jsonに新Mixinクラス追加",
        "🎨 テクスチャリソース追加 - test/bullet.pngテクスチャ追加",
        "test/texture.png更新 - テクスチャリソースの改善",
        "m1873.glbモデル更新 - glTFモデルデータの最新化"
      ]
    },
    "2025-06-15-ultimate-shooting": {
      "title": "射撃・エイム・HUDシステムの大幅機能拡張と本格的な銃撃戦システム完成",
      "changes": [
        "🔫 射撃システム完全実装 - 拡散角計算（エイム・移動状態対応）",
        "リコイルシステム（S2C同期） - RecoilPacket.java新実装",
        "弾道軌跡パーティクル（発砲煙・軌跡） - CRITパーティクル使用",
        "射撃時耐久度減少システム - 非クリエイティブモード対応",
        "3D直交座標系による精密な拡散ベクトル計算実装",
        "🎯 エイム・HUDシステム強化 - カスタムクロスヘア（動的拡散角表示）",
        "弾丸ヒット表示（ヒット:緑/キル:赤） - BulletHitHudState.java新実装",
        "エイム中視点ブレ効果 - 円形範囲内ランダム移動と偏り補正",
        "インベントリ開放時自動エイム解除 - ClientAimManager.java拡張",
        "FOV計算とpixelsPerRadian変換で物理的に正確なクロスヘア",
        "⚔️ ダメージシステム実装 - カスタム弾丸ダメージタイプ作成",
        "ヘッドショット判定システム - 敵サイズ応動型",
        "キル判定とHUD連携 - リアルタイムフィードバック",
        "DamageSourcesAccessor.java - Registry<DamageType>アクセスMixin実装",
        "🔧 システム基盤拡張 - Mixin拡充（GameRenderer, InGameHud, DamageSources）",
        "HudState構造化・分離 - AAHudRenderer.HudStateから独立クラス化",
        "GameRendererInvoker.java - FOV取得のためのMixin Invoker",
        "MixinInGameHud.java - 銃アイテム時デフォルトクロスヘア無効化",
        "MixinItemStack.java - 空NBT自動クリーンアップ機能",
        "UniqueComponent改良 - getOrSet()メソッドとgetUUID()メソッド追加",
        "🛠️ ゲーム統合 - M1873・中口径弾レシピ実装",
        "advancement・言語ファイル整備 - 日英両対応",
        "設定UI tooltip追加 - トグルエイム設定説明",
        "glTFモデル更新 - m1873.glbマテリアル情報更新",
        "LeverActionGunItem.java拡張 - fireBullet()/fireSpread()/calculateSpreadDirection()実装",
        "BulletEntity.java拡張 - パーティクル、カスタムダメージ、ヒット同期統合",
        "LeverActionGunDataType.java拡張 - 拡散角パラメータ3種追加",
        "Registration.java拡張 - M1873耐久度256、BULLET_DAMAGE_TYPE追加"
      ]
    },
    "2025-06-15-ultimate": {
      "title": "glTFレンダリングシステム大規模リファクタリング＆マテリアル対応＆FPV機能実装完了",
      "changes": [
        "recordクラス化大規模リファクタリング - 全gltf/dataクラスの不変設計への移行",
        "builderパターン導入 - ProcessedMesh/ProcessedGltfModel/ProcessedAnimation等で柔軟な構築",
        "GltfMaterialExtractor.java - glTFマテリアルからProcessedMaterialへの完全変換実装",
        "ProcessedMaterial.java - PBRマテリアル管理recordクラスの完全実装",
        "5種類テクスチャ対応 - baseColor/metallicRoughness/normal/occlusion/emissive",
        "アルファモード完全対応 - OPAQUE/MASK/BLENDの適切な処理",
        "FPV（一人称視点）対応 - hideFPVBones()による視点別描画制御実装",
        "Nullableアノテーション完全対応 - 全gltfシステムで型安全性向上",
        "switch式・パターンマッチング - Java 17機能を活用したコード簡素化",
        "assert文導入 - 実行時チェックでバグの早期発見",
        "統計情報record化 - MeshStats/AnimationStats/CacheStats等の構造化",
        "GltfModelConverter.java - マテリアル連携とbuilderパターン構築完全実装",
        "GltfVertexExtractor.java - マテリアル情報連携とProcessedMesh構築最適化",
        "AccessorData/AccessorDataCache - Nullable強化とrecord統計情報対応",
        "DirectProcessor - FPVボーン非表示機能追加",
        "テクスチャリソース更新 - test/texture.png、test/skin_alex.png追加",
        "m1873.glbモデル更新 - マテリアル情報の更新",
        "知識の泉完全更新 - gltf.jsonに全リファクタリング情報追加"
      ]
    },
    "2025-06-14-record": {
      "title": "複数テクスチャ対応システム完成とgltf/data全クラスrecord化大規模リファクタリング",
      "changes": [
        "ProcessedKeyframe.java - record化とスプラインタンジェント完全対応",
        "KeyframeInfo recordとビルダーパターン、自動バリデーション機能",
        "MorphTarget.java - record化と統計情報機能大幅強化",
        "MorphTargetStats recordとデータ型情報取得機能追加",
        "ProcessedSkin.java - record化と階層構造管理機能完全実装",
        "ルートボーン自動検出、循環参照検出、深度別ボーン取得機能",
        "ProcessedChannel.java - record化と補間アルゴリズム完全移植",
        "Vector3f/Quaternionf/float/float[]の線形補間実装とChannelStats record",
        "ProcessedAnimation.java - record化とnameByChannelsマッピング最適化",
        "ボーン別アクセス最適化、自動マッピング生成、AnimationStats record",
        "全クラスにビルダーパターンとtoBuilder()メソッド追加",
        "知識の泉完全更新 - gltf.jsonに全record化情報追加",
        "ProcessedBoneはBuilderパターンが複雑すぎるためrecord化せず現状維持",
        "5クラスのrecord化で不変設計とメモリ効率を大幅向上"
      ]
    },
    "2025-06-14-material": {
      "title": "複数テクスチャ対応のProcessedMaterialシステム完成とrecord化リファクタリング",
      "changes": [
        "ProcessedMaterial.java - recordクラスによる不変マテリアル管理システム実装",
        "5種類のテクスチャ対応（baseColor/metallicRoughness/normal/occlusion/emissive）",
        "PBRマテリアル係数の完全対応とアルファモード対応",
        "ビルダーパターンと自動バリデーション機能",
        "GltfMaterialExtractor.java - マテリアル変換処理の原型実装",
        "GltfModelConverter.java - マテリアル抽出処理連携の原型追加",
        "ProcessedGltfModel.java - record化とマテリアルリスト対応の完全リファクタリング",
        "ビルダーパターンとModelStats recordによる統計情報拡張",
        "ProcessedMesh.java - record化とProcessedMaterial直接参照対応",
        "getMaterial()による安全なマテリアルアクセスとMeshStats record追加",
        "互換性のためmaterialIndexも保持、既存コードへの影響最小化",
        "知識の泉更新 - gltf.jsonにマテリアル関連ファイル情報追加",
        "複数テクスチャ対応の基盤システム完成、GltfRenderer実装段階へ"
      ]
    },
    "2025-06-14": {
      "title": "エイム機能の完全実装とリアルタイムエイムシステム完成",
      "changes": [
        "AimManager.java - エイム状態管理システム実装（アイテム切り替え時自動解除）",
        "ClientAimManager.java - クライアント側エイム管理とトグル・プッシュ両対応",
        "HasAimManager/IAimManager.java - エイム機能のインターフェース設計",
        "IKeyInputManager.java - キー入力システムの抽象化とダミー実装対応",
        "MixinPlayerEntity.java - 全プレイヤーエンティティにエイム機能注入",
        "MixinClientPlayerEntity.java - クライアントプレイヤー特別処理対応",
        "AimPacket.java - エイム状態のリアルタイムサーバー同期通信",
        "MixinHeldItemRenderer.java - エイム時の銃描画位置調整（中央配置）",
        "MixinItemRenderer.java - エイム時アニメーション名サフィックス(*_aiming)対応",
        "KeyInputManager/GunController/HasKeyInputManager - IKeyInputManagerインターフェース対応",
        "ClientKeyInputManager.java - getKeyInputManager()メソッド追加とインターフェース対応",
        "ActionArms.java/ActionArmsClient.java - エイム管理システム統合とtick()タイミング調整",
        "Networking.java - AimPacket受信登録とエイム状態同期対応",
        "actionarms-common.mixins.json - MixinPlayerEntity/MixinClientPlayerEntity登録",
        "マルチプレイヤー対応のリアルタイムエイムシステム完成"
      ]
    },
    "2025-06-13": {
      "title": "HUD描画システムの完全実装と弾薬状況の視覚的表示機能",
      "changes": [
        "AAHudRenderer.java - 薬室とマガジンの弾薬状況を視覚的に表示するHUDレンダラー実装",
        "縦並び（右下固定）と横並び（上部中央）の2つの表示方式対応",
        "弾薬テクスチャと空テクスチャで装填状況を直感的に表示",
        "LeverActionHudState.java - HUD表示用状態データ管理システム実装",
        "MagazineContents/ChamberStateレコードによる型安全な状態管理",
        "NBT形式でのシリアライゼーション・デシリアライゼーション対応",
        "ClientHudManager.java - クライアント側HUD状態管理システム",
        "20tick（1秒）でのタイムアウト処理と効率的な状態管理",
        "ServerHudManager.java - サーバー側HUD管理システム",
        "状態変化時のみクライアント送信する効率的な同期システム",
        "HudStatePacket.java - リアルタイムHUD状態同期ネットワーク通信",
        "個別プレイヤー対象送信とNBT形式データ転送",
        "多言語対応 - 日本語・英語言語ファイル追加",
        "アセット追加 - 弾薬フレームテクスチャファイル",
        "既存システム統合 - LeverActionGun、ActionArms、ActionArmsClient、Networkingの連携",
        "マルチプレイヤー対応のリアルタイム弾薬状況表示システム完成"
      ]
    },
    "2025-06-12": {
      "title": "知見管理システムの齟齬修正とファイル情報の更新",
      "changes": [
        "item.jsonに未記載のコンポーネントファイルを追加",
        "Cartridge.java - 薬莢（カートリッジ）クラスの情報追加",
        "Chamber.java - 薬室クラスの情報追加",
        "CyclingLever.java - レバーサイクルインターフェースの情報追加",
        "FireTrigger.java - 発射トリガーインターフェースの情報追加",
        "Reloadable.java - リロード可能インターフェースの情報追加",
        "entity.jsonのファイル配置情報を修正",
        "entity/util/ディレクトリへの正しいパス表示に修正",
        "InventoryAmmoUtil/KeyInputManager/GunController/Has*ファイルの配置情報修正",
        "実際のプロジェクト構造と知見管理システムの齟齬を完全解消"
      ]
    },
    "2025-06-11-latest": {
      "title": "キー入力システムとGunControllerの完全実装",
      "changes": [
        "KeyInputManager.java - 汎用キー入力状態管理システム実装",
        "ClientKeyInputManager.java - クライアント側キー管理とサーバー同期",
        "GunController.java - プレイヤーの銃操作統合制御システム",
        "KeyInputPacket.java - クライアント・サーバー間キー入力同期パケット",
        "MixinServerPlayerEntity.java - プレイヤーエンティティ機能拡張Mixin",
        "HasKeyInputManager/HasGunController - インターフェース定義",
        "AAKeys.java - KeyInputManager連携とキーバインドシステム改修",
        "LeverActionGunItem.java - 従来のuse()/inventoryTick()削除、GunController連携",
        "LeverActionGunComponent.java - tick()最適化、can系メソッド精密化",
        "LeverActionGunDataType.java - パラメータ順序整理(時系列順)",
        "GunDataTypes.java - M1873パラメータ順序更新",
        "Networking.java - KeyInputPacket受信登録",
        "ActionArms.java - サーバーティックでKeyInputManager.postTick()処理",
        "ActionArmsClient.java - ClientKeyInputManagerティック登録",
        "actionarms-common.mixins.json - MixinServerPlayerEntity登録",
        ".gitignore - /fabric/mods_runtime/追加",
        "fabric/build.gradle - modRuntimeOnly設定追加"
      ]
    },
    "2025-06-10-latest": {
      "title": "サウンド再生と弾薬システムの完全実装",
      "changes": [
        "InventoryAmmoUtil.java - インベントリから弾薬管理ユーティリティ実装",
        "BulletItem.java - 弾丸アイテムクラス実装",
        "LeverActionPlaySoundContext.java - サウンド再生コンテキスト実装",
        "LeverActionGunItem.java - サウンドと弾薬管理の統合",
        "LeverActionGunComponent.java - サウンド再生機能追加",
        "FireTrigger/CyclingLever/Reloadable - サウンドコンテキスト対応",
        "Registration.java - サウンドイベントと新アイテム登録",
        "MIDDLE_CALIBER_BULLETアイテム追加",
        "M1873銃アイテム追加（旧TEST_LEVER_ACTION_GUN）",
        "4種類の銃サウンドイベント実装",
        "sounds.jsonでサウンドバリエーション対応",
        "クリエイティブモードでの無限弾薬対応",
        "空撃ち音再生機能実装",
        "アイテムモデルとテクスチャファイル追加"
      ]
    },
    "2025-06-10": {
      "title": "弾丸エンティティシステムの完全実装",
      "changes": [
        "BulletEntityクラスの完全実装（217行）",
        "BulletEntityRendererでエンティティ描画対応",
        "LeverActionGunItemに実際の弾丸射撃処理実装",
        "Registration.javaでBULLET_ENTITYタイプ登録",
        "ActionArmsClientでエンティティレンダラー登録",
        "BulletComponentにgetBulletDataType()メソッド追加",
        "レイキャスト＋ProjectileUtilハイブリッド当たり判定",
        "ヘッドショット判定システム（サイズ応動型）",
        "重力と空気抵抗の物理演算",
        "所有者追跡システム（UUID/Entity）",
        "EnderDragonPart特別対応",
        "マルチプレイヤー対応の完全実装"
      ]
    },
    "2025-06-08": {
      "title": "コンポーネントシステムの大幅リファクタリングとレジストリシステム導入",
      "changes": [
        "コンポーネントパッケージ統合（component→item/component）",
        "DataTypeとComponentの明確な分離実装",
        "レジストリベースのコンポーネント管理システム導入",
        "Bullet/BulletType/MagazineTypeの旧実装を削除",
        "BulletComponent/BulletDataTypeの新実装を追加",
        "Magazine→MagazineComponentへのリファクタリング",
        "LeverActionGunType→LeverActionGunDataTypeに名称変更",
        "GunComponentTypes/GunDataTypesレジストリを新設",
        "ExampleComponentを削除（不要になったため）",
        "AnimationContextインターフェース追加",
        "BaseItemComponent基底クラス導入",
        "ファクトリーパターンと型安全性の向上",
        "より柔軟で拡張性のあるコンポーネントシステムを構築"
      ]
    },
    "2025-06-08-previous": {
      "title": "コンポーネント統合とレバーアクション銃システム完全実装",
      "changes": [
        "LeverActionGunとLeverActionGunComponentの統合実装",
        "無駄な抽象化削除とシンプルな構造実現",
        "FireTrigger/CyclingLever/Reloadableインターフェース設計",
        "Chamber/Magazine/Bullet/Cartridgeによる銃の内部構造実装",
        "複雑な状態管理とタイミング制御（coolTime/cancelableTime）",
        "ItemAnimationManagerによるUUIDベースアニメーション管理",
        "ネットワーク同期によるマルチプレイヤーアニメーション対応",
        "MixinHeldItemRendererによる描画位置カスタマイズ",
        "チューブマガジン（FILO）の実装",
        "UniqueComponentによるアイテム個体識別システム"
      ]
    },
    "2025-06-05": {
      "title": "中間オブジェクト完全削除による最大効率化完了",
      "changes": [
        "DirectProcessor導入で中間オブジェクト100%削除",
        "GltfMemoryPoolでThreadLocalメモリプール完全実装",
        "ComputedBoneMatricesData/ComputedTRSData/ComputedVertexData完全廃止",
        "AnimationProcessor/VertexProcessorをDirectProcessorに統合",
        "頂点データをメモリに一切保存しない直接描画システム",
        "アニメーション→ボーン行列→頂点→描画の一気通貫処理",
        "アロケーション90%削減とメモリ使用量50-70%削減達成",
        "副作用ゼロ設計と最高パフォーマンスの両立実現"
      ]
    }
  }
}