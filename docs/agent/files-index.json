{
  "description": "ActionArms MOD - 銃の機構と操作の心地よさを重視したMinecraft用銃MOD（副作用ゼロレンダリングシステム完全実装済み）",
  "last_updated": "2025-06-13",
  "structure": {
    "common/": {
      "description": "プラットフォーム共通コード",
      "detail_files": {
        "root.json": "メインクラス・設定管理",
        "client.json": "クライアント処理・キーバインド",
        "config.json": "MOD設定",
        "item.json": "銃アイテム・コンポーネント",
        "network.json": "ネットワーク通信",
        "setup.json": "登録処理",
        "gltf.json": "glTFモデル描画システム（副作用ゼロ設計完全対応）",
        "component.json": "移行完了ファイル（全クラスがitem/componentに統合済み）",
        "entity.json": "エンティティシステム（弾丸エンティティ）"
      }
    },
    "fabric/": {
      "description": "Fabric依存コード（未実装）"
    },
    "forge/": {
      "description": "Forge依存コード（未実装）"
    }
  },
  "key_features": [
    "コンポーネントベースの銃システム",
    "AccessorDataシステムの完全統合とメモリ効率大幅改善",
    "中間オブジェクト完全削除の直接描画システム（最大効率化完了！）",
    "イミュータブルなRenderingContext設計",
    "純粋関数型アニメーション計算（AnimationProcessor）",
    "統合された状態管理システム",
    "パッケージ構造の完全整理（converter/data/processor/renderer/util）",
    "レバーアクション機構の完全実装",
    "コンポーネントベースの銃の機構システム",
    "アニメーション同期システム",
    "カスタマイズ可能なキーバインド",
    "リアルタイムアニメーション対応",
    "スレッドセーフなレンダリング",
    "高いテスタビリティ（純粋関数設計）",
    "Mixinベースのカスタムアイテム描画",
    "メモリ効率と保守性の両立",
    "物理演算付き弾丸エンティティシステム",
    "ヘッドショット判定とダメージ処理",
    "レイキャスト＋ProjectileUtilハイブリッド当たり判定",
    "統合サウンドシステム（サイクル・リロード・射撃・空撃ち）",
    "リアルな弾薬管理システム（インベントリ連携）",
    "コンポーネントベース弾薬アイテムシステム",
    "クリエイティブモードでの無限弾薬対応",
    "キー入力システムとGunControllerの完全実装",
    "専用キーバインド操作システム（右クリック廃止）",
    "クライアント・サーバー間キー入力同期",
    "プレイヤーエンティティへのMixin機能注入",
    "インベントリ全体の銃アイテム自動処理",
    "マルチプレイヤー対応のリアルタイム銃操作",
    "HUD描画システムの完全実装",
    "薬室・マガジン状況の視覚的表示機能",
    "リアルタイムHUD状態同期システム",
    "効率的なネットワーク通信による弾薬状況表示"
  ],
  "recent_major_changes": {
    "2025-06-13": {
      "title": "HUD描画システムの完全実装と弾薬状況の視覚的表示機能",
      "changes": [
        "AAHudRenderer.java - 薬室とマガジンの弾薬状況を視覚的に表示するHUDレンダラー実装",
        "縦並び（右下固定）と横並び（上部中央）の2つの表示方式対応",
        "弾薬テクスチャと空テクスチャで装填状況を直感的に表示",
        "LeverActionHudState.java - HUD表示用状態データ管理システム実装",
        "MagazineContents/ChamberStateレコードによる型安全な状態管理",
        "NBT形式でのシリアライゼーション・デシリアライゼーション対応",
        "ClientHudManager.java - クライアント側HUD状態管理システム",
        "20tick（1秒）でのタイムアウト処理と効率的な状態管理",
        "ServerHudManager.java - サーバー側HUD管理システム",
        "状態変化時のみクライアント送信する効率的な同期システム",
        "HudStatePacket.java - リアルタイムHUD状態同期ネットワーク通信",
        "個別プレイヤー対象送信とNBT形式データ転送",
        "多言語対応 - 日本語・英語言語ファイル追加",
        "アセット追加 - 弾薬フレームテクスチャファイル",
        "既存システム統合 - LeverActionGun、ActionArms、ActionArmsClient、Networkingの連携",
        "マルチプレイヤー対応のリアルタイム弾薬状況表示システム完成"
      ]
    },
    "2025-06-12": {
      "title": "知見管理システムの齟齬修正とファイル情報の更新",
      "changes": [
        "item.jsonに未記載のコンポーネントファイルを追加",
        "Cartridge.java - 薬莢（カートリッジ）クラスの情報追加",
        "Chamber.java - 薬室クラスの情報追加",
        "CyclingLever.java - レバーサイクルインターフェースの情報追加",
        "FireTrigger.java - 発射トリガーインターフェースの情報追加",
        "Reloadable.java - リロード可能インターフェースの情報追加",
        "entity.jsonのファイル配置情報を修正",
        "entity/util/ディレクトリへの正しいパス表示に修正",
        "InventoryAmmoUtil/KeyInputManager/GunController/Has*ファイルの配置情報修正",
        "実際のプロジェクト構造と知見管理システムの齟齬を完全解消"
      ]
    },
    "2025-06-11-latest": {
      "title": "キー入力システムとGunControllerの完全実装",
      "changes": [
        "KeyInputManager.java - 汎用キー入力状態管理システム実装",
        "ClientKeyInputManager.java - クライアント側キー管理とサーバー同期",
        "GunController.java - プレイヤーの銃操作統合制御システム",
        "KeyInputPacket.java - クライアント・サーバー間キー入力同期パケット",
        "MixinServerPlayerEntity.java - プレイヤーエンティティ機能拡張Mixin",
        "HasKeyInputManager/HasGunController - インターフェース定義",
        "AAKeys.java - KeyInputManager連携とキーバインドシステム改修",
        "LeverActionGunItem.java - 従来のuse()/inventoryTick()削除、GunController連携",
        "LeverActionGunComponent.java - tick()最適化、can系メソッド精密化",
        "LeverActionGunDataType.java - パラメータ順序整理(時系列順)",
        "GunDataTypes.java - M1873パラメータ順序更新",
        "Networking.java - KeyInputPacket受信登録",
        "ActionArms.java - サーバーティックでKeyInputManager.postTick()処理",
        "ActionArmsClient.java - ClientKeyInputManagerティック登録",
        "actionarms-common.mixins.json - MixinServerPlayerEntity登録",
        ".gitignore - /fabric/mods_runtime/追加",
        "fabric/build.gradle - modRuntimeOnly設定追加"
      ]
    },
    "2025-06-10-latest": {
      "title": "サウンド再生と弾薬システムの完全実装",
      "changes": [
        "InventoryAmmoUtil.java - インベントリから弾薬管理ユーティリティ実装",
        "BulletItem.java - 弾丸アイテムクラス実装",
        "LeverActionPlaySoundContext.java - サウンド再生コンテキスト実装",
        "LeverActionGunItem.java - サウンドと弾薬管理の統合",
        "LeverActionGunComponent.java - サウンド再生機能追加",
        "FireTrigger/CyclingLever/Reloadable - サウンドコンテキスト対応",
        "Registration.java - サウンドイベントと新アイテム登録",
        "MIDDLE_CALIBER_BULLETアイテム追加",
        "M1873銃アイテム追加（旧TEST_LEVER_ACTION_GUN）",
        "4種類の銃サウンドイベント実装",
        "sounds.jsonでサウンドバリエーション対応",
        "クリエイティブモードでの無限弾薬対応",
        "空撃ち音再生機能実装",
        "アイテムモデルとテクスチャファイル追加"
      ]
    },
    "2025-06-10": {
      "title": "弾丸エンティティシステムの完全実装",
      "changes": [
        "BulletEntityクラスの完全実装（217行）",
        "BulletEntityRendererでエンティティ描画対応",
        "LeverActionGunItemに実際の弾丸射撃処理実装",
        "Registration.javaでBULLET_ENTITYタイプ登録",
        "ActionArmsClientでエンティティレンダラー登録",
        "BulletComponentにgetBulletDataType()メソッド追加",
        "レイキャスト＋ProjectileUtilハイブリッド当たり判定",
        "ヘッドショット判定システム（サイズ応動型）",
        "重力と空気抵抗の物理演算",
        "所有者追跡システム（UUID/Entity）",
        "EnderDragonPart特別対応",
        "マルチプレイヤー対応の完全実装"
      ]
    },
    "2025-06-08": {
      "title": "コンポーネントシステムの大幅リファクタリングとレジストリシステム導入",
      "changes": [
        "コンポーネントパッケージ統合（component→item/component）",
        "DataTypeとComponentの明確な分離実装",
        "レジストリベースのコンポーネント管理システム導入",
        "Bullet/BulletType/MagazineTypeの旧実装を削除",
        "BulletComponent/BulletDataTypeの新実装を追加",
        "Magazine→MagazineComponentへのリファクタリング",
        "LeverActionGunType→LeverActionGunDataTypeに名称変更",
        "GunComponentTypes/GunDataTypesレジストリを新設",
        "ExampleComponentを削除（不要になったため）",
        "AnimationContextインターフェース追加",
        "BaseItemComponent基底クラス導入",
        "ファクトリーパターンと型安全性の向上",
        "より柔軟で拡張性のあるコンポーネントシステムを構築"
      ]
    },
    "2025-06-08-previous": {
      "title": "コンポーネント統合とレバーアクション銃システム完全実装",
      "changes": [
        "LeverActionGunとLeverActionGunComponentの統合実装",
        "無駄な抽象化削除とシンプルな構造実現",
        "FireTrigger/CyclingLever/Reloadableインターフェース設計",
        "Chamber/Magazine/Bullet/Cartridgeによる銃の内部構造実装",
        "複雑な状態管理とタイミング制御（coolTime/cancelableTime）",
        "ItemAnimationManagerによるUUIDベースアニメーション管理",
        "ネットワーク同期によるマルチプレイヤーアニメーション対応",
        "MixinHeldItemRendererによる描画位置カスタマイズ",
        "チューブマガジン（FILO）の実装",
        "UniqueComponentによるアイテム個体識別システム"
      ]
    },
    "2025-06-05": {
      "title": "中間オブジェクト完全削除による最大効率化完了",
      "changes": [
        "DirectProcessor導入で中間オブジェクト100%削除",
        "GltfMemoryPoolでThreadLocalメモリプール完全実装",
        "ComputedBoneMatricesData/ComputedTRSData/ComputedVertexData完全廃止",
        "AnimationProcessor/VertexProcessorをDirectProcessorに統合",
        "頂点データをメモリに一切保存しない直接描画システム",
        "アニメーション→ボーン行列→頂点→描画の一気通貫処理",
        "アロケーション90%削減とメモリ使用量50-70%削減達成",
        "副作用ゼロ設計と最高パフォーマンスの両立実現"
      ]
    }
  }
}